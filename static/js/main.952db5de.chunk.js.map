{"version":3,"sources":["Footer.js","Header.js","CheckedLuggage.js","CheckedThing.js","CheckedLuggageCategory.js","LuggageItem.js","LuggageCategory.js","LuggageData.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","id","href","Header","props","className","CHECKED_LUGGAGE","category","things","name","inputType","value","CheckedThing","setValue","e","setState","target","removeFromCheckedList","data","state","this","changeList","item","type","onChange","onClick","React","Component","CheckedLuggageCategory","content","map","i","key","LuggageItem","addToCheckedList","thing","Object","assign","onAddToCheckedList","disabled","LuggageCategory","checkedCategory","usedThings","includes","LUGGAGE_DATA","Main","showLuggageSection","addSectionVisible","showAddSection","handleAddToCheckedList","prevState","checkedList","deleteFromCheckedList","categoryToFind","thingToFind","newState","categoryIndex","findIndex","catItem","length","splice","thingIndex","console","log","slice","style","clear","renderAddSection","renderCheckedSection","filter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.952db5de.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction Footer() {\n  return (\n    <footer>\n        <div id=\"info\">\n          Nazywam się Tomasz Szymański. Stworzyłem tę stronę, aby zaprezentować\n          moje umiejętności w zakresie frontendu. Jeśli chcesz zgłosić uwagę,\n          zaprosić mnie w podróż (albo dać pracę) oto mój email:\n          <a href=\"mailto:tszymanski86@gmail.com\">tszymanski86@gmail.com</a>\n        </div>\n      </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <h1 className=\"logo\">W DROGĘ!</h1>\r\n\r\n      <nav>\r\n        <ul className=\"destination\">\r\n          <li>\r\n            <a id=\"destination0\" href=\"#\" className=\"active\">\r\n              Egipt\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a id=\"destination1\" href=\"#\">\r\n              Kraków\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a id=\"destination2\" href=\"#\">\r\n              góry\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","const CHECKED_LUGGAGE = [\r\n  {\r\n    category: \"elektronika\",\r\n    things: [\r\n      { name: \"telefon\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"ubrania\",\r\n    things: [\r\n      { name: \"kurtka\" },\r\n      {\r\n        name: \"skarpetki\",\r\n        inputType : \"number\",\r\n        value : 6,\r\n      },\r\n      {\r\n        name: \"majtki\",\r\n        inputType : \"number\",\r\n        value: 5,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default CHECKED_LUGGAGE;\r\n","import React from \"react\";\r\nimport \"./LuggageItem.css\";\r\nimport CHECKED_LUGGAGE from \"./CheckedLuggage\";\r\n\r\nclass CheckedThing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.data.value,\r\n    };\r\n  }\r\n\r\n  setValue = (e) => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  changeList() {\r\n    this.props.changeList();\r\n  }\r\n/*\r\n  deleteThis = () => {\r\n    const name = this.props.data.name;\r\n    const category = this.props.category;\r\n    const categoryIndex = CHECKED_LUGGAGE.findIndex((el) => {\r\n      return el.category === category;\r\n    });\r\n    if (CHECKED_LUGGAGE[categoryIndex].things.length === 1) {\r\n      CHECKED_LUGGAGE.splice(categoryIndex, 1);\r\n      this.changeList();\r\n    } else {\r\n      const thingIndex = CHECKED_LUGGAGE[categoryIndex].things.findIndex((el) => {\r\n        return el.name === name;\r\n      });\r\n      CHECKED_LUGGAGE[categoryIndex].things.splice(thingIndex, 1);\r\n      this.changeList();\r\n    }\r\n  };\r\n*/\r\n  removeFromCheckedList = () => {\r\n    const category = this.props.category;\r\n    const name = this.props.data.name;\r\n    this.props.removeFromCheckedList({category, name});\r\n  }\r\n\r\n  render() {\r\n    const item = this.props.data;\r\n    return (\r\n      <div className=\"luggageItem\">\r\n        <div className=\"luggageTitle\">{item.name}</div>\r\n        {item.inputType && (\r\n          <input\r\n            type={item.inputType}\r\n            value={this.state.value}\r\n            onChange={this.setValue}\r\n          />\r\n        )}\r\n        <button onClick={this.removeFromCheckedList}>usuń</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckedThing;\r\n","import React from \"react\";\r\nimport CheckedThing from \"./CheckedThing\";\r\nimport \"./App.css\";\r\n\r\n\r\nclass CheckedLuggageCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n \r\n  render() {\r\n    const content = this.props.data;\r\n    const category = content.category;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"categoryName\">{category}</div>\r\n        {content.things.map((item, i) => (\r\n          <li key={i}>\r\n            <CheckedThing\r\n              data={item}\r\n              category={category}\r\n              removeFromCheckedList={this.props.removeFromCheckedList} />\r\n          </li>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckedLuggageCategory;\r\n","import React from \"react\";\r\nimport \"./LuggageItem.css\";\r\n\r\n\r\nclass LuggageItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: props.item.value,\r\n    };\r\n  }\r\n  \r\n  setValue = (e) => {\r\n    this.setState({ value: e.target.value });\r\n    //console.log(e.target);\r\n    //console.log(e.target.value);\r\n    //console.log(this.state.value);\r\n  }\r\n\r\n  addToCheckedList = () => {\r\n    const data = {\r\n      category: this.props.category,\r\n      thing: Object.assign({}, this.props.item, {value: this.state.value}),\r\n    };\r\n    this.props.onAddToCheckedList(data);\r\n  };\r\n\r\n  render() {\r\n    const { disabled, item } = this.props;\r\n    return (\r\n      <div className=\"luggageItem\">\r\n        <div className=\"luggageTitle\">{item.name}</div>\r\n        {item.inputType && (\r\n          <input\r\n            disabled={disabled}\r\n            type={item.inputType}\r\n            value={this.state.value}\r\n            onChange={this.setValue}\r\n          />\r\n        )}\r\n        <button disabled={disabled} onClick={this.addToCheckedList}>dodaj</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LuggageItem;\r\n","import React from \"react\";\r\nimport LuggageItem from \"./LuggageItem\";\r\nimport \"./App.css\";\r\n\r\n\r\nclass LuggageCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n/*\r\n  changeList = () => {\r\n    this.props.changeList();\r\n  }\r\n*/\r\n  render() {\r\n    const content = this.props.data;\r\n    const category = content.category;\r\n\r\n    const checkedCategory = this.props.checkedCategory;\r\n    let usedThings = [];\r\n    if (checkedCategory) {\r\n      usedThings = checkedCategory.things.map(thing => thing.name);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"categoryName\">{category}</div>\r\n        {content.things.map((item, i) => (\r\n          <li key={i}>\r\n            <LuggageItem\r\n              item={item}\r\n              disabled={usedThings.includes(item.name)}\r\n              category={category}\r\n              /*changeList={this.changeList}*/\r\n              onAddToCheckedList={this.props.onAddToCheckedList} />\r\n          </li>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LuggageCategory;\r\n","const LUGGAGE_DATA = [\n  {\n    category: \"elektronika\",\n    things: [\n    { name: \"telefon\" },\n    { name: \"ładowarka\"},\n    {\n      name: \"pendrive\",\n      inputType: \"textarea\",\n      value: \"zgrać zdjęcia\",\n    },\n    ],\n  },\n  {\n    category: \"ubrania\",\n    things: [\n    { name: \"kurtka\" },\n    { name: \"skarpetki\",\n      inputType : \"number\",\n      value : 6,\n    },\n    {\n      name: \"majtki\",\n      inputType : \"number\",\n      value: 5,\n    },\n    ],\n  },\n  {\n    category: \"jedzenie\",\n    things: [\n    {\n      name: \"parówki\",\n      inputType : \"number\",\n      value: 10,\n    },\n    { name: \"kanapki\" },\n    { name: \"konserwa\"}\n    ],\n  },\n  {\n    category: \"inne\",\n    things: [\n    {\n      name: \"książka\",\n      inputType : \"text\",\n      value: \"Potop\",\n    },\n    { name: \"bilet\" },\n    { name: \"dokumenty\"},\n    { name: \"krem z filtrem\"}\n    ],\n  },\n  ];\n\nexport default LUGGAGE_DATA;","import React, { Component } from \"react\";\r\nimport CHECKED_LUGGAGE from \"./CheckedLuggage\";\r\nimport CheckedLuggageCategory from \"./CheckedLuggageCategory\";\r\nimport LuggageCategory from \"./LuggageCategory\";\r\nimport LUGGAGE_DATA from \"./LuggageData\";\r\nimport \"./Main.css\";\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addSectionVisible: true,\r\n      checkedList : CHECKED_LUGGAGE.slice(),\r\n    };\r\n  }\r\n\r\n  showLuggageSection = () => {\r\n    this.setState({addSectionVisible: false});\r\n  }\r\n\r\n  showAddSection = () => {\r\n    this.setState({addSectionVisible: true});\r\n  }\r\n\r\n  handleAddToCheckedList = (data) => {\r\n    this.setState(prevState => {\r\n      const categories = prevState.checkedList.map(category => category.category);\r\n      if (!categories.includes(data.category)) {\r\n        return {\r\n          checkedList: [...prevState.checkedList, {category: data.category, things: [data.thing, ]}],\r\n        }\r\n      }\r\n\r\n      return {\r\n        checkedList: prevState.checkedList.map(category => {\r\n          if (data.category === category.category) {\r\n            const checkedThings = category.things.map(thing => thing.name);\r\n            if (!checkedThings.includes(data.thing.name)) {\r\n              category.things = [...category.things, data.thing];\r\n            }\r\n          }\r\n          return category\r\n        }),\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteFromCheckedList = (data) => {\r\n    const categoryToFind = data.category;\r\n    const thingToFind = data.name;\r\n    const newState = this.state.checkedList;\r\n    const categoryIndex = newState.findIndex((catItem) => {\r\n      return catItem.category === categoryToFind;\r\n    });\r\n\r\n    if (newState[categoryIndex].things.length === 1) {\r\n      newState.splice(categoryIndex, 1);\r\n    } else {\r\n      const thingIndex = newState[categoryIndex].things.findIndex((thing) => {\r\n        return thing.name === thingToFind;\r\n      });\r\n      newState[categoryIndex].things.splice(thingIndex, 1);\r\n    }\r\n\r\n    this.setState(\r\n      {checkedList : newState}\r\n    );\r\n/*\r\n    this.setState(preState => {\r\n      return {checkedList : newState}\r\n    });*/\r\n    console.log(this.state.checkedList);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <div id=\"viewButtons\">\r\n          <button id=\"addSectionButton\" onClick={this.showAddSection}>DODAJ DO BAGAŻU</button>\r\n          <button id=\"luggageSectionButton\" onClick={this.showLuggageSection}>MÓJ BAGAŻ</button>\r\n          <div style={{ clear: \"both\" }}></div>\r\n        </div>\r\n        {this.renderAddSection()}\r\n        {this.renderCheckedSection()}\r\n        <div style={{ clear: \"both\" }}></div>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  renderAddSection() {\r\n    return (\r\n      <div id=\"things\" className={`work${this.state.addSectionVisible ? '' : ' hidden'}`}>\r\n        <div className=\"sectionTitle\">DODAJ DO BAGAŻU</div>\r\n        {LUGGAGE_DATA.map((item, i) => (\r\n          <ul key={i}>\r\n            <LuggageCategory\r\n              checkedCategory={this.state.checkedList.filter(category => category.category === item.category)[0] || null}\r\n              data={item}\r\n              onAddToCheckedList={this.handleAddToCheckedList} />\r\n          </ul>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCheckedSection() {\r\n    return (\r\n      <div id=\"luggage\" className={`work${this.state.addSectionVisible ? ' hidden' : ''}`}>\r\n        <div className=\"sectionTitle\">\r\n          MÓJ BAGAŻ\r\n        </div>\r\n          {this.state.checkedList.map((item, i) => (\r\n            <ul key={i}>\r\n              <CheckedLuggageCategory \r\n              data={item}\r\n              removeFromCheckedList={this.deleteFromCheckedList} />\r\n            </ul>\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}